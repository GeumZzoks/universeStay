<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.universestay.project.resources.mybatis.mapper.room.roomMapper">


    <select id="totalCount" parameterType="MainSearchCondition" resultType="int">
        SELECT COUNT(DISTINCT R.room_id) AS total_count
        FROM Room R
        LEFT JOIN RoomImg RI ON R.room_id = RI.room_id
        WHERE RI.room_img_url IS NOT NULL
        <if test="category != null and category != ''">
            AND R.room_category_id = #{category}
        </if>
        <if test="view != null and view != ''">
            AND R.room_id IN (
            SELECT A.room_id
            FROM RoomView A
            WHERE A.view_status_id = #{view}
            )
        </if>
        <if test="address != null and address != ''">
            <![CDATA[
            AND (
            R.room_address LIKE CONCAT('%', #{address}, '%')
            )
            AND R.room_max_capa >= CAST(#{search_capa} AS SIGNED)
            AND (
            R.room_weekday_price * (DATEDIFF(STR_TO_DATE(#{search_end_date}, '%Y-%m-%d'), STR_TO_DATE(#{search_start_date}, '%Y-%m-%d'))) >= CAST(#{search_min_price} AS SIGNED)
            AND R.room_weekday_price * (DATEDIFF(STR_TO_DATE(#{search_end_date}, '%Y-%m-%d'), STR_TO_DATE(#{search_start_date}, '%Y-%m-%d'))) <= CAST(#{search_max_price} AS SIGNED)
            )
            AND NOT EXISTS(
            SELECT 1
            FROM Booking B
            WHERE B.room_id = R.room_id
            AND (
            B.booking_checkin_date = STR_TO_DATE(#{search_start_date}, '%Y-%m-%d')
            OR (B.booking_checkin_date < STR_TO_DATE(#{search_start_date}, '%Y-%m-%d') AND B.booking_checkout_date > STR_TO_DATE(#{search_start_date}, '%Y-%m-%d'))
            OR (STR_TO_DATE(#{search_start_date}, '%Y-%m-%d') < B.booking_checkin_date AND B.booking_checkin_date < STR_TO_DATE(#{search_end_date}, '%Y-%m-%d'))
            )
            AND (B.status_id = 'B01' OR B.status_id = 'B02')
            )
         ]]>
        </if>
    </select>

    <select id="selectAll" parameterType="MainSearchCondition" resultType="map">
        SELECT R.*, GROUP_CONCAT(RI.room_img_url SEPARATOR ', ') AS room_img_url_list
        , CASE WHEN W.user_id IS NOT NULL THEN 1 ELSE 0 END AS has_wished
        FROM Room R
        LEFT JOIN RoomImg RI ON R.room_id = RI.room_id
        LEFT JOIN WishList W
        ON R.room_id = W.room_id AND W.user_id = #{user_id}
        WHERE RI.room_img_url IS NOT NULL
        -- 카테고리 버튼 클릭시 발현하는 쿼리
        <if test="category != null and category != ''">
            AND room_category_id = #{category}
        </if>
        -- 뷰 버튼 클릭시 발현하는 쿼리
        <if test="view != null and view != ''">
            AND R.room_id IN (
            SELECT A.room_id
            FROM Room A, RoomView B
            WHERE A.room_id = B.room_id
            AND B.view_status_id = #{view}
            )
        </if>
        -- 메인 검색시 발현하는 쿼리
        <if test="address != null and address != ''">
            <![CDATA[
                AND (
                    R.room_address LIKE CONCAT('%', #{address}, '%')
                    OR R.room_address LIKE CONCAT('%', #{address}, '%')
                )
                AND R.room_max_capa >= CAST(#{search_capa} AS SIGNED)
                AND (
                    R.room_weekday_price * (DATEDIFF(STR_TO_DATE(#{search_end_date}, '%Y-%m-%d'),
                                                    STR_TO_DATE(#{search_start_date}, '%Y-%m-%d'))) >=
                        CAST(#{search_min_price} AS SIGNED)
                    AND R.room_weekday_price * (DATEDIFF(STR_TO_DATE(#{search_end_date}, '%Y-%m-%d'),
                                                                 STR_TO_DATE(#{search_start_date}, '%Y-%m-%d'))) <=
                        CAST(#{search_max_price} AS SIGNED)
                )
                AND NOT EXISTS(
                    SELECT *
                    FROM Booking B
                    WHERE B.room_id = R.room_id
                      AND (
                            B.booking_checkin_date = STR_TO_DATE(#{search_start_date}, '%Y-%m-%d')
                            OR (B.booking_checkin_date < STR_TO_DATE(#{search_start_date}, '%Y-%m-%d') AND
                                B.booking_checkout_date > STR_TO_DATE(#{search_start_date}, '%Y-%m-%d'))
                            OR (STR_TO_DATE(#{search_start_date}, '%Y-%m-%d') < B.booking_checkin_date AND
                                B.booking_checkin_date < STR_TO_DATE(#{search_end_date}, '%Y-%m-%d'))
                          )
                      AND (B.status_id = 'B01' OR B.status_id = 'B02')
                    )
                ]]>
        </if>
        GROUP BY R.room_id
        LIMIT #{offset}, #{pageSize};
    </select>

    <select id="select" resultType="map">
        SELECT R.*, CASE WHEN W.user_id IS NOT NULL THEN 1 ELSE 0 END AS has_wished
        FROM Room R
                 LEFT JOIN WishList W ON R.room_id = W.room_id AND W.user_id = #{user_id}
        WHERE R.room_id = #{room_id}
    </select>

    <select id="select5RoomImg" resultType="RoomImgDto">
        SELECT *
        FROM RoomImg
        WHERE room_id = #{room_id} LIMIT 0, 5
    </select>

    <select id="listHostRoom" resultType="RoomDto">
        SELECT *
        FROM Room
        WHERE user_id = #{user_id}
          AND room_status_id NOT IN ('R03')
        ORDER BY created_at
    </select>

    <!--  <select id="listHostRoom" resultType="map">-->
    <!--    select ri.room_img_url, r.room_name, r.created_at-->
    <!--    from Room r,-->
    <!--         RoomImg ri-->
    <!--    where r.room_id = ri.room_id-->
    <!--      and r.user_id = #{user_id};-->
    <!--  </select>-->

    <!--  <select id="shutdownHostroom">-->
    <!--    UPDATE Room-->
    <!--    SET room_status_id = 'R03'-->
    <!--    WHERE room_id = #{room_id}-->

    <!--  </select>-->

    <sql id="statusCondition">
        <choose>
            <when test='room_status_id=="R01"'>
                SET room_status_id = 'R01'
            </when>
            <when test='room_status_id=="R02"'>
                SET room_status_id = 'R02'
            </when>
            <otherwise>
                SET room_status_id = 'R03'
            </otherwise>
        </choose>
    </sql>

    <update id="statusHostroom" parameterType="map">
        UPDATE Room
        <include refid="statusCondition"></include>
        WHERE room_id = #{room_id}
    </update>
</mapper>